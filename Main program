def main():
    global x
    global y
    global steps
    global ans
    global Return_type_error
    if Return_type_error:
        Return_type_error=False
    else:
        print_board()
    ans=input("System: Please enter the direction you want to move")
def print_board():
    global Board
    for y in range(23):
        print(Board[0][y],Board[1][y], Board[2][y], Board[3][y], Board[4][y], Board[5][y], Board[6][y], Board[7][y], Board[8][y], Board[9][y], Board[10][y], Board[11][y],Board[12][y], Board[13][y], Board[14][y], Board[15][y], Board[16][y], Board[17][y], Board[18][y], Board[19][y], Board[20][y], Board[21][y], Board[22][y])
def build_maze():
    global Board
    i=random.randint(1,1)
    if i == 1:
        print("System: Loading Maze 01...")
        time.sleep(0.1)
        x=0 
        y=0
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=0 
        y=1
        Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        x=x+12
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0 
        y=2
        Board[x][y]="X"
        x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1 
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+2
        for j in range(7):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=3
        Board[x][y]="X"
        for j in range(4):
            x=x+2
            Board[x][y]="X"
        for j in range(3):
            x=x+4
            Board[x][y]="X"
        x=0
        y=4
        Board[x][y]="X"
        for j in range(3):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(2):
            Board[x][y]="X"
            x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+2
        for j in range(7):
            Board[x][y]="X"
            x=x+1
        x=0
        y=5
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        for j in range(5):
            x=x+2
            Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        x=0
        y=6
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(5):
            Board[x][y]="X"
            x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=0
        y=7
        Board[x][y]="X"
        x=x+4
        for j in range(6):
            Board[x][y]="X"
            x=x+2
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=0
        y=8
        Board[x][y]="X"
        for j in range(6):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=0
        y=9
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+10
        Board[x][y]="X"
        x=x+4
        x=0
        y=10
        Board[x][y]="X"
        x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(2):
            Board[x][y]="X"
            x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=11
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        for j in range(2):
            x=x+4
            Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=0
        y=12
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=13
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=14
        Board[x][y]="X"
        
        x=0 
        y=22
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        print("System: Maze 01 loaded successfully.")
    elif i == 2:
        print("System: Loading Maze 02...")
        time.sleep(0.1)
        x=0 
        y=0
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=0 
        y=1

        x=0 
        y=22
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        print("System: Maze 02 loaded successfully.")
    elif i == 3:
        print("System: Loading Maze 03...")
        time.sleep(0.1)
        x=0 
        y=0
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=0 
        y=1

        x=0 
        y=22
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        print("System: Maze 03 loaded successfully.")

import time
import random
x=0
y=0
steps=0
ans=None
Return_type_error=False
Board=[[" "] * 23 for i in range(23)]
print("System: This game is for single players.")
time.sleep(1)
print("System: ")
build_maze()
print_board()
