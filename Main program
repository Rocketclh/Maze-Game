def main():
    global steps
    global Board
    global Type_error
    if Type_error:
        Type_error=False
    else:
        print_board()
    found=False
    x=0
    y=0
    while found != True: #Automated relocate player position
        if Board[x][y] == "P":
            found=True
        else:
            y=y+1
            if y > 20:
                x=x+1
                y=0
                if x > 20:
                    print("System: ERROR")
                    print("System: Player position not found, please restart the game")
                    ans=input("System: Press Enter to exit the game")
                    sys.exit()
    ans=input("System: Please enter the direction you want to move")
    ans=ans.lower()
    if ans == "w": #Move up
        if y > 0 and Board[x][y-1] != "X":
            Board[x][y]=" "
            y=y-1
            steps=steps+1
            if Board[x][y] == "E":
                end()
            else:
                Board[x][y]="P"
        else:
            print("System: Invalid move!")
            print("System: You cannot move up")
            Type_error=True
            main()
    elif ans == "s": #Move down
        if y < 20 and Board[x][y+1] != "X":
            Board[x][y]=" "
            y=y+1
            steps=steps+1
            if Board[x][y] == "E":
                end()
            else:
                Board[x][y]="P"
        else:
            print("System: Invalid move!")
            print("System: You cannot move down")
            Type_error=True
            main()
    elif ans == "a": #Move left
        if x > 0 and Board[x-1][y] != "X":
            Board[x][y]=" "
            x=x-1
            steps=steps+1
            if Board[x][y] == "E":
                end()
            else:
                Board[x][y]="P"
        else:
            print("System: Invalid move!")
            print("System: You cannot move left")
            Type_error=True
            main()
    elif ans == "d": #Move right
        if x < 20 and Board[x+1][y] != "X":
            Board[x][y]=" "
            x=x+1
            steps=steps+1
            if Board[x][y] == "E":
                end()
            else:
                Board[x][y]="P"
        else:
            print("System: Invalid move!")
            print("System: You cannot move right")
            Type_error=True
            main()
    else:
        print("System: Invalid input!")
        print("System: Please enter W, A, S, or D")
        Type_error=True
        main()
    main()

def end():
    global steps
    print("System: Congratulations!")
    print("System: You have exited the maze!")
    print("System: Total steps taken:", steps)
    ans=input("System: Press Enter to exit the game")
    sys.exit()

def print_board():
    global Board
    print("")
    for y in range(21):
        print(Board[0][y],Board[1][y], Board[2][y], Board[3][y], Board[4][y], Board[5][y], Board[6][y], Board[7][y], Board[8][y], Board[9][y], Board[10][y], Board[11][y],Board[12][y], Board[13][y], Board[14][y], Board[15][y], Board[16][y], Board[17][y], Board[18][y], Board[19][y], Board[20][y])
    print("")

def build_maze():
    global Board
    i=random.randint(2,2)
    if i == 1:
        print("System: Loading Maze 01...")
        time.sleep(0.1)
        x=0 
        y=0
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        Board[x][y]="P"  # Player starting point
        x=x+1
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=0 
        y=1
        Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        x=x+12
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0 
        y=2
        Board[x][y]="X"
        x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1 
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+2
        for j in range(7):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=3
        Board[x][y]="X"
        for j in range(4):
            x=x+2
            Board[x][y]="X"
        for j in range(3):
            x=x+4
            Board[x][y]="X"
        x=0
        y=4
        Board[x][y]="X"
        for j in range(3):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(2):
            Board[x][y]="X"
            x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+2
        for j in range(7):
            Board[x][y]="X"
            x=x+1
        x=0
        y=5
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        for j in range(5):
            x=x+2
            Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        x=0
        y=6
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(5):
            Board[x][y]="X"
            x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=0
        y=7
        Board[x][y]="X"
        x=x+4
        for j in range(6):
            Board[x][y]="X"
            x=x+2
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=0
        y=8
        Board[x][y]="X"
        for j in range(6):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=0
        y=9
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+10
        Board[x][y]="X"
        x=x+4
        x=0
        y=10
        Board[x][y]="X"
        x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(2):
            Board[x][y]="X"
            x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=11
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        for j in range(2):
            x=x+4
            Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=0
        y=12
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=13
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=0
        y=14
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(5):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(3):
            Board[x][y]="X"
            x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=0
        y=15
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+6
        for j in range(4):
            Board[x][y]="X"
            x=x+2
        x=x+2
        Board[x][y]="X"
        x=0
        y=16
        Board[x][y]="X"
        for j in range(2):
            x=x+2
            Board[x][y]="X"
        x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(4):
            Board[x][y]="X"
            x=x+2
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=0
        y=17
        Board[x][y]="X"
        for j in range(2):
            x=x+4
            Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        x=x+2
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        x=0
        y=18
        for j in range(7):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(7):
            Board[x][y]="X"
            x=x+1
        x=x+1
        for j in range(3):
            Board[x][y]="X"
            x=x+1
        x=x+1
        Board[x][y]="X"
        x=0
        y=19
        Board[x][y]="X"
        x=x+10
        Board[x][y]="X"
        x=x+6
        Board[x][y]="X"
        x=x+4
        Board[x][y]="X"
        x=0 
        y=20
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        Board[x][y]="E"  # Exit point
        x=x+1
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        print("System: Maze 01 loaded successfully.")
    elif i == 2:
        mn=str(random.randint(2,999))
        print("System: Loading Maze 0"+mn+"...")
        time.sleep(0.1)
        x=0 
        y=0
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        Board[x][y]="P"  # Player starting point
        x=x+1
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        x=0 
        y=20
        for j in range(11):
            Board[x][y]="X"
            x=x+1
        Board[x][y]="E"  # Exit point
        x=x+1
        for j in range(9):
            Board[x][y]="X"
            x=x+1
        print("System: Maze 0"+mn+" loaded successfully.")
    main()

import time
import random
import sys
steps=0
Type_error=False
Board=[[" "] * 21 for i in range(21)]
print("System: This game is for single players")
time.sleep(1)
print("System: Icon'X' is the wall, and icon ' ' is the path")
time .sleep(1)
print("System: Icon 'P' represent player, and icon 'E' represent exit")
time.sleep(1)
print("System: You can move in four directions")
time.sleep(1)
print("System: Up (W), Down (S), Left (A), Right (D)")
time.sleep(1)
print("System: Every steps you take will be recorded")
time.sleep(1)
print("System: Your goal is to exit the maze with fewest steps")
time.sleep(1)
ans=input("System: Press Enter to start the game")
print("System: Good luck!")
time.sleep(0.5)
build_maze()
